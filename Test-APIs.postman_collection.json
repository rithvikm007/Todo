{
	"info": {
		"_postman_id": "mini-todo-api-collection",
		"name": "Mini Todo API",
		"description": "Collection for testing the Mini Todo API with JWT auth",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"auth_token\", jsonData.token);",
									"    pm.environment.set(\"user_id\", jsonData.user.id);",
									"    console.log(\"Token saved to environment\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"alice\",\n  \"password\": \"s3cret\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new user and receive a JWT token"
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"auth_token\", jsonData.token);",
									"    pm.environment.set(\"user_id\", jsonData.user.id);",
									"    console.log(\"Token saved to environment\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"alice\",\n  \"password\": \"s3cret\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login with existing user credentials"
					},
					"response": []
				}
			]
		},
		{
			"name": "Todos",
			"item": [
				{
					"name": "Create Todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"todo_id\", jsonData.id);",
									"    console.log(\"Todo ID saved to environment: \" + jsonData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Buy groceries\",\n  \"body\": \"Milk, eggs, bread, cheese\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/todos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							]
						},
						"description": "Create a new todo item"
					},
					"response": []
				},
				{
					"name": "List All Todos",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/todos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							]
						},
						"description": "Get all todos for the authenticated user"
					},
					"response": []
				},
				{
					"name": "Get Single Todo",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/todos/{{todo_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								"{{todo_id}}"
							]
						},
						"description": "Get a specific todo by ID"
					},
					"response": []
				},
				{
					"name": "Update Todo",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Buy groceries (UPDATED)\",\n  \"body\": \"Milk, eggs, bread, cheese, yogurt\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/todos/{{todo_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								"{{todo_id}}"
							]
						},
						"description": "Update an existing todo"
					},
					"response": []
				},
				{
					"name": "Delete Todo",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/todos/{{todo_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								"{{todo_id}}"
							]
						},
						"description": "Delete a todo by ID"
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}
